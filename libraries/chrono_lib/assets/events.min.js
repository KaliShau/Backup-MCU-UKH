function HideField(form,selector){let field=form.querySelector(selector);field.closest(".field.holder")?field.closest(".field.holder").classList.add("hidden"):field.classList.add("hidden")}function ShowField(form,selector){let field=form.querySelector(selector);field.closest(".field.holder")?field.closest(".field.holder").classList.remove("hidden"):field.classList.remove("hidden")}function EnableField(form,selector){let field=form.querySelector(selector);field.closest(".field.holder")?field.closest(".field.holder").classList.remove("disabled"):field.classList.remove("disabled"),field.disabled=!1}function DisableField(form,selector){let field=form.querySelector(selector);field.closest(".field.holder")?field.closest(".field.holder").classList.add("disabled"):field.classList.add("disabled"),field.disabled=!0}function DisableValidation(form,selector){let field=form.querySelector(selector);field.setAttribute("disable-validations","1"),field.closest(".field.holder").classList.remove("error"),field.closest(".field.holder").querySelector(".errormsg")&&field.closest(".field.holder").querySelector(".errormsg").remove(),field.closest(".field.holder").querySelector(".errormark")&&field.closest(".field.holder").querySelector(".errormark").classList.add("hidden")}function EnableValidation(form,selector){let field=form.querySelector(selector);field.removeAttribute("disable-validations"),field.closest(".field.holder").querySelector(".errormark")&&field.closest(".field.holder").querySelector(".errormark").classList.remove("hidden")}function CallFunction(name,form,selector){let field=form.querySelector(selector);"function"==typeof window[name]&&window[name](field)}function SetValue(form,selector,values){let field;form.querySelector(selector).value=values[0]}function ClearValue(form,selector){let field;form.querySelector(selector).value=""}function SubmitForm(form,selector){let field;form.querySelector(selector).closest("form").submit()}function SelectAll(checksone){document.querySelectorAll("input[name='"+checksone.getAttribute("name")+"']").forEach(check=>{Nui.Checkbox.getInstance(check.closest(".nui.checkbox")).toggle()})}function AJAX(form,selector,url,fname){let field=form.querySelector(selector);field.closest("form").classList.add("loading");let postBody=new FormData(field.closest("form"));postBody.delete("chronopage");const xhttp=new XMLHttpRequest;xhttp.addEventListener("readystatechange",e=>{field.closest("form").classList.remove("loading"),4==e.target.readyState&&200==e.target.status&&"function"==typeof window[fname]&&window[fname](e.target.responseText,field)}),xhttp.open("POST",url),xhttp.send(postBody)}function Reload(form,selector,url){let field=form.querySelector(selector);form.classList.add("loading");let postBody=new FormData(form);postBody.delete("chronopage");const xhttp=new XMLHttpRequest;xhttp.addEventListener("readystatechange",e=>{if(form.classList.remove("loading"),4==e.target.readyState&&200==e.target.status){let results=Nui.Core.create_element(e.target.responseText,!0);field.closest(".field.holder")?(Array.from(results).forEach(item=>{field.closest(".field.holder").before(item),Nui_boot(item)}),Nui.Form.getInstance(form).init(),field.closest(".field.holder").remove()):(Array.from(results).forEach(item=>{field.before(item),Nui_boot(item)}),Nui.Form.getInstance(form).init(),field.remove())}}),xhttp.open("POST",url),xhttp.send(postBody)}function LoadOptions(form,selector,url){let field=form.querySelector(selector);field.closest("form").classList.add("loading");let postBody=new FormData(field.closest("form"));postBody.delete("chronopage");const xhttp=new XMLHttpRequest;xhttp.addEventListener("readystatechange",e=>{if(field.closest("form").classList.remove("loading"),4==e.target.readyState&&200==e.target.status){let options=JSON.parse(e.target.responseText);field.querySelectorAll("option").forEach(option=>{option.remove()}),Array.isArray(options)&&(Object.keys(options).forEach(key=>{let opt=Nui.Core.create_element('<option value="'+options[key].value+'">'+options[key].text+"</option>");field.append(opt)}),Nui.Dropdown.getInstance(field).init())}}),xhttp.open("POST",url),xhttp.send(postBody)}function SetupEvent(form,selector,event,fn){let fields;form.querySelectorAll(selector)&&document.addEventListener(event,e=>{e.target.matches(selector)&&e.target.matches(':not([type="hidden"])')&&fn()})}function GetValues(form,selector){let fields=form.querySelectorAll(selector);if(fields){let values=[];return fields.forEach(f=>{"checkbox"==f.getAttribute("type")||"radio"==f.getAttribute("type")?f.checked&&values.push(f.value):f.value.length>0&&values.push(f.value)}),values}return[]}function NotEmpty(s){return s.length>0}function isEmpty(form,selector){let field=form.querySelector(selector),values;return 0==GetValues(form,selector).length}function HasValue(form,selector,tvalues){let field=form.querySelector(selector),values=GetValues(form,selector),result=!1;return tvalues.forEach(v=>{values.includes(v)&&(result=!0)}),result}function Matches(form,selector,regex){let field=form.querySelector(selector),values=GetValues(form,selector),r;return new RegExp(regex).test(values[0])}